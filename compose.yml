services:
  app-service:
    container_name: app_service
    image: luiscarlosjayk/app-service # specify name of image on Docker Hub
    restart: "unless-stopped" # automatically restart container when server crashes
    environment: # set up environment variables
      AUTH_SERVICE_IP: ${AUTH_SERVICE_IP}
    ports:
      - "8000:8000" # expose port 8000 so that applications outside the container can connect to it 
    depends_on: # only run app-service after auth-service has started
      auth-service:
        condition: service_started
    networks:
      - app-tier

  auth-service:
    container_name: auth_service
    image: luiscarlosjayk/auth-service
    restart: "unless-stopped" # automatically restart container when server crashes
    ports:
      - "3000:3000" # expose port 3000 so that applications outside the container can connect to it 
    networks:
      - auth-tier
  
  reverse-proxy:
    container_name: nginx
    image: nginx:latest
    restart: "unless-stopped" # automatically restart container when server crashes
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./proxy/templates:/etc/nginx/templates
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    environment:
      NGINX_HOST: localhost
      NGINX_PORT: 80
      NGINX_HTTPS_PORT: 443
      AUTH_SERVICE_IP: ${AUTH_SERVICE_IP}
    depends_on:
      auth-service:
        condition: service_started
      app-service:
        condition: service_started
    networks:
      - auth-tier
      - app-tier

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      reverse-proxy:
        condition: service_started
    command: certonly --webroot --webroot-path=/var/www/html --email luiscarlosjayk@gmail.com --agree-tos --no-ff-email --staging -d livebootcamp.luiscarlosjayk.com -d www.livebootcamp.luiscarlosjayk.com

volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local

networks:
  auth-tier:
    driver: bridge
  app-tier:
    driver: bridge
    