server {
  listen ${NGINX_PORT};
  listen [::]:${NGINX_PORT};
  server_name livebootcamp.luiscarlosjayk.com www.livebootcamp.luiscarlosjayk.com;

  location ~ /.well-known/acme-challenge {
    allow all;
    root /var/www/html;
  }

  location / {
    rewrite ^ https://$host$request_uri? permanent;
  }
}

server {
  listen ${NGINX_HTTPS_PORT} ssl;
  listen [::]:${NGINX_HTTPS_PORT} ssl;
  server_name livebootcamp.luiscarlosjayk.com www.livebootcamp.luiscarlosjayk.com;
  http2 on;

  server_tokens off;

  ssl_certificate /etc/letsencrypt/live/livebootcamp.luiscarlosjayk.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/livebootcamp.luiscarlosjayk.com/privkey.pem;

  ssl_buffer_size 8k;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

  ssl_ecdh_curve secp384r1;
  ssl_session_tickets off;

  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.8.8;

  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;

  location /auth {
    proxy_pass http://auth-service:${AUTH_SERVICE_PORT}/;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
  }

  location /app {
    proxy_pass http://app-service:${APP_SERVICE_PORT}/;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
  }

  # Serve static files for app-service
  location /app/assets {
    proxy_pass http://app-service:${APP_SERVICE_PORT}/assets/;
  }

  # Serve static files for auth-service
  location /auth/assets {
    proxy_pass http://auth-service:${AUTH_SERVICE_PORT}/assets/;
  }
}